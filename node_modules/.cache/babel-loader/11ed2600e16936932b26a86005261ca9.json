{"ast":null,"code":"var _jsxFileName = \"/Users/nils/Desktop/my-app/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table'; // import Main from \"./Main\";\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Title',\n      field: 'title'\n    }, {\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'Age',\n      field: 'age',\n      type: 'numeric'\n    }, {\n      title: 'Country',\n      field: 'birthCountry'\n    }],\n    data: []\n  }); //const [data, setData] = React.useState([])\n\n  React.useEffect(() => {\n    // https://medium.com/javascript-in-plain-english/how-to-use-async-function-in-react-hook-useeffect-typescript-js-6204a788a435\n    // Create an scoped async function in the hook\n    async function getData() {\n      const url = \"https://api.randomuser.me/?results=15\";\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.results);\n      const people = data.results.map(person => {\n        return {\n          name: person.name.first,\n          title: person.name.title,\n          email: person.email,\n          surname: person.name.last,\n          birthCountry: person.location.country,\n          age: person.dob.age\n        };\n      });\n      console.log(people);\n      setState({ ...state,\n        data: people\n      });\n    } // Execute the created function directly\n\n\n    getData();\n  }, []);\n  return React.createElement(MaterialTable, {\n    title: \"Employee Details\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/nils/Desktop/my-app/src/components/Table.js"],"names":["React","Component","MaterialTable","MaterialTableDemo","state","setState","useState","columns","title","field","type","data","useEffect","getData","url","response","fetch","json","console","log","results","people","map","person","name","first","email","surname","last","birthCountry","location","country","age","dob","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport MaterialTable from 'material-table';\n// import Main from \"./Main\";\n\nexport default function MaterialTableDemo() {\n    const [state, setState] = React.useState({\n        columns: [\n\n            { title: 'Title', field: 'title' },\n            { title: 'Name', field: 'name' },\n            { title: 'Surname', field: 'surname' },\n            { title: 'Email', field: 'email' },\n            { title: 'Age', field: 'age', type: 'numeric' },\n            { title: 'Country', field: 'birthCountry' },\n\n        ],\n        data: [],\n\n    });\n    //const [data, setData] = React.useState([])\n\n    React.useEffect(() => {\n        // https://medium.com/javascript-in-plain-english/how-to-use-async-function-in-react-hook-useeffect-typescript-js-6204a788a435\n        // Create an scoped async function in the hook\n        async function getData() {\n            const url = \"https://api.randomuser.me/?results=15\";\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(data.results);\n            const people = data.results.map(person => {\n                return {\n                    name: person.name.first,\n                    title: person.name.title,\n                    email: person.email,\n                    surname: person.name.last,\n                    birthCountry: person.location.country,\n                    age: person.dob.age,\n\n\n                }\n            })\n            console.log(people);\n            setState({...state, data: people })\n        }\n        // Execute the created function directly\n        getData();\n    }, []);\n\n\n    return ( <\n        MaterialTable title = \"Employee Details\"\n        columns = { state.columns }\n        data = { state.data }\n        editable = {\n            {\n                onRowAdd: newData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            setState(prevState => {\n                                const data = [...prevState.data];\n                                data.push(newData);\n                                return {...prevState, data };\n                            });\n                        }, 600);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                                setState(prevState => {\n                                    const data = [...prevState.data];\n                                    data[data.indexOf(oldData)] = newData;\n                                    return {...prevState, data };\n                                });\n                            }\n                        }, 600);\n                    }),\n                onRowDelete: oldData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            setState(prevState => {\n                                const data = [...prevState.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                return {...prevState, data };\n                            });\n                        }, 600);\n                    }),\n            }\n        }\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}